plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.marcos.mytasks'
    compileSdk 33

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "com.marcos.mytasks"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // AndroidX
    implementation "androidx.core:core-ktx:$android_core_ktx"
    implementation "androidx.appcompat:appcompat:$android_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$android_constraint_layout"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$jetbrains_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$jetbrains_kotlin_coroutines"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$android_dagger_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$android_dagger_hilt"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$google_firebase_bom")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    // Glide
    implementation "com.github.bumptech.glide:glide:$github_glide"
    kapt "com.github.bumptech.glide:compiler:$github_glide"

    // Gson
    implementation "com.google.code.gson:gson:$google_gson"

    // Javax Inject
    implementation "javax.inject:javax.inject:1"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$android_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$android_lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$android_lifecycle"

    // Material design
    implementation "com.google.android.material:material:$google_material_design"
    implementation "androidx.legacy:legacy-support-v4:$android_legacy_support"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$android_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$android_navigation"

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$squareup_ok_http"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$squareup_retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$squareup_retrofit"

    // Room
    implementation "androidx.room:room-ktx:$android_room_database"
    implementation "androidx.room:room-runtime:$android_room_database"
    implementation "androidx.room:room-paging:$android_room_database"
    kapt "androidx.room:room-compiler:$android_room_database"

    // Unit test
    testImplementation "junit:junit:$test_junit"
    testImplementation "androidx.room:room-testing:$android_room_database"
    testImplementation "androidx.arch.core:core-testing:$test_arch_core"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$jetbrains_kotlin_coroutines"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$test_mockito"

    // Instrumentation test
    androidTestImplementation "androidx.test.ext:junit:$test_junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$test_espresso"

    debugImplementation "androidx.fragment:fragment-testing:$test_fragment"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$android_dagger_hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$android_dagger_hilt"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$squareup_mock_web_server"

    androidTestImplementation "androidx.test:runner:$test_runner"
    androidTestUtil "androidx.test:orchestrator:$test_orchestrator"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$jetbrains_kotlin_coroutines"

    androidTestImplementation "androidx.navigation:navigation-testing:$android_navigation"
}